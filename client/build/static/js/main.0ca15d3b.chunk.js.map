{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/Title/title.mp4","components/Title/index.js","components/Band/data.js","components/Band/bandImages/pinkrangerprofile.png","components/Band/bandImages/chitchatprofile.png","components/Band/bandImages/amzyprofile.png","components/Band/index.js","utils/mutations.js","components/Posts/index.js","pages/Home.js","pages/Detail.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","db","tx","store","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","posts","newPostState","filter","postsList","length","products","cartOpen","cart","product","map","purchaseQuantity","newState","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","props","dispatch","initialState","useReducer","_jsx","useStoreContext","useContext","ProductItem","item","image","price","quantity","_jsxs","className","children","Link","to","concat","alt","src","onClick","addToCart","itemInCart","find","cartItem","parseInt","QUERY_CHECKOUT","gql","_templateObject","_taggedTemplateLiteral","QUERY_PRODUCTS","_templateObject2","QUERY_USER","_templateObject3","_templateObject4","_templateObject5","QUERY_POSTS","_templateObject6","ProductList","loading","data","useQuery","useEffect","forEach","then","category","spinner","CartItem","placeholder","onChange","target","role","removeFromCart","getProfile","decode","this","getToken","loggedIn","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","location","assign","logout","removeItem","stripePromise","loadStripe","process","REACT_APP_STRIPE_KEY","Cart","getCheckout","useLazyQuery","toggleCart","res","redirectToCheckout","sessionId","checkout","session","catch","async","getCart","sum","toFixed","calculateTotal","Auth","productIds","i","push","variables","ContentDiv","styled","div","Container","Title","autoPlay","muted","loop","titleVideo","style","fontSize","artists","imagePath","title","titleTwo","text","footer","facebook","insta","youtube","GroupExample","_Fragment","CardGroup","artist","Card","border","width","Img","variant","Body","Text","Footer","CDBBox","display","CDBBtn","href","flat","color","outline","FaFacebookF","FaInstagramSquare","FaYoutube","LOGIN","DELETE_POST","UPDATE_POST","ADD_ORDER","ADD_USER","ADD_POST","Posts","getPosts","addPost","useMutation","updatePost","updatedPostData","deletePost","deletedPostData","postBody","setPostBody","useState","username","setUsername","editing","setEditing","updatePostBody","setUpdatePostBody","post","showButtons","postId","onSubmit","handleUpdateSubmit","preventDefault","id","update","_ref2","readQuery","query","updatedPost","writeQuery","handleUpdate","handleDelete","_ref3","postObj","error","Home","Band","replace","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","NoMatch","Login","formState","setFormState","email","password","handleChange","event","htmlFor","Signup","addUser","firstName","lastName","Nav","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","cache","InMemoryCache","typePolicies","Query","fields","merge","existing","arguments","undefined","incoming","merger","client","ApolloClient","link","App","ApolloProvider","Router","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","React","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0ca15d3b.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n      db.createObjectStore('posts', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\nexport const ADD_POST = \"ADD_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n  ADD_POST,\n  UPDATE_POST,\n  DELETE_POST\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n\n    case ADD_POST:\n      console.log(\"ADD_POST case in reducers\", action.posts)\n      return {\n        ...state,\n        posts: [...state.posts, action.posts],\n      };\n    \n    case UPDATE_POST:\n      return {\n        ...state,\n        posts: [...action.posts],\n      };\n\n    case DELETE_POST:\n      let newPostState = state.posts.filter(posts => {\n        return posts._id !== action._id;\n      });\n\n      return {\n        ...state,\n        postsList: newPostState.length > 0,\n        posts: newPostState\n      };\n\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    posts: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1 border border-0 rounded-0\" >\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from \"@apollo/client\";\n\n\n\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      username\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n      posts{\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_POSTS = gql`\nquery posts {\n  posts {\n    _id\n    postBody\n    username\n  }\n}\n`\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/login');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe(`${process.env.REACT_APP_STRIPE_KEY}`);\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/title.cc14294a.mp4\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport titleVideo from \"./title.mp4\";\n\nconst ContentDiv = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: #f1f1f1;\n  max-height: 30%;\n  width: 50%;\n  padding: 2%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  text-align: center;\n  background: linear-gradient(to right, rgba(251, 194, 235, 1), rgba(166, 193, 238, 1)) !important;\n`;\n\nexport default function Title() {\n  return (\n    <Container>\n      <video className=\"video\" autoPlay muted loop>\n        <source src={titleVideo} type=\"video/mp4\" />\n      </video>\n\n      <ContentDiv>\n        <h1 style={{ fontSize: \"2vw\" }} >Checkout this month's featured artists and come out to support local music.</h1>\n      </ContentDiv>\n    </Container>\n  );\n}\n","import pinkRanger from \"./bandImages/pinkrangerprofile.png\";\nimport chitChat from \"./bandImages/chitchatprofile.png\"\nimport amzy from \"./bandImages/amzyprofile.png\"\n\n\n\n\nexport const artists = [\n\t{\n\t\timagePath: pinkRanger,\n\t\talt: \"Pink Ranger profile picture\",\n\t\ttitle: \"PINK RANGER\",\n\t\ttitleTwo: \"Pink Ranger is a dynamic three piece rock band hailing from Denver, CO. With an eclectic mix of influences ranging from pop to punk to alternative, their sound is both fresh and familiar. This talented trio has been captivating audiences with their high-energy performances and catchy tunes, leaving fans eager for more. And they won't have to wait much longer, as Pink Ranger is set to release their highly anticipated EP in the fall of 2023. Get ready for a wild ride filled with driving beats, soaring guitars, and irresistible hooks, as Pink Ranger proves that rock and roll is alive and well.\",\n\t\ttext: \" POP ROCK\",\n\t\tfooter: \"PLAYING SATURDAY 2/11\",\n\t\tfacebook: \"https://www.facebook.com/pinkrangermusic\",\n\t\tinsta: \"https://instagram.com/pinkranger.x?igshid=MWI4MTIyMDE=\",\n\t\tyoutube: \"https://www.youtube.com/channel/UCa0ZML7l-CVcPRF_SFGt5rA\"\n\t},\n\t{\n\t\timagePath: chitChat,\n\t\talt: \"ChitChat profile picture\",\n\t\ttitle: \"CHITCHAT\",\n\t\ttitleTwo: \"hi, we're chitchat; a synth-pop duo from mountainous Denver, Colorado. we first started making music together in January of 2019. we make electronic pop inspired by human interaction, introspection, and synthesizers from past and present.\",\n\t\ttext: \"ELECTRONIC POP\",\n\t\tfooter: \"PLAYING SATURDAY 2/18\",\n\t\tfacebook: \"https://m.facebook.com/100069641636199/\",\n\t\tinsta: \"https://instagram.com/its.chitchat?igshid=YmMyMTA2M2Y=\",\n\t\tyoutube: \"https://youtube.com/@chitchat8969\"\n\t},\n\t{\n\t\timagePath: amzy,\n\t\talt: \"Amzy profile picture\",\n\t\ttitle: \"AMZY\",\n\t\ttitleTwo: \"AMZY blends rock and modern textures to create a genre all their own. In their music, empathy comes first. Each members inner conflicts — from struggles with identity, societal pressures, depression and simply being human — are interlaced between each track. AMZY carved out their place in Denver with detailed and energetic live performances that blend passion, humor and heart.\",\n\t\ttext: \" NEW AGE ROCK\",\n\t\tfooter: \"PLAYING SATURDAY 2/25\",\n\t\tfacebook: \"https://www.facebook.com/AmzyMusic/\",\n\t\tinsta: \"https://www.instagram.com/amzymusic/\",\n\t\tyoutube: \"https://www.youtube.com/channel/UCR7NMEiwkeEaY9Vkb4T8wEQ\"\n\t},\n];\n\nexport default artists;","export default __webpack_public_path__ + \"static/media/pinkrangerprofile.a1ec883a.png\";","export default __webpack_public_path__ + \"static/media/chitchatprofile.58eee37b.png\";","export default __webpack_public_path__ + \"static/media/amzyprofile.575a8995.png\";","import React from \"react\";\n// import styled from \"styled-components\";\nimport \"./style.css\";\nimport { CDBBtn, CDBBox } from \"cdbreact\";\nimport { FaInstagramSquare, FaYoutube, FaFacebookF } from \"react-icons/fa\";\n\nimport Card from \"react-bootstrap/Card\";\nimport CardGroup from \"react-bootstrap/CardGroup\";\nimport { artists } from \"./data.js\";\n\nexport default function GroupExample() {\n  return (\n    <>\n      <CardGroup className=\"cardGroup\">\n        {artists.map((artist, i) => (\n          <Card key={i} className=\"mx-3\" border=\"dark\" style={{ width: \"18rem\" }}>\n            <Card.Img\n              className=\"cardImg img-fluid\"\n              variant=\"top\"\n              src={artist.imagePath}\n            />\n            <Card.Body className=\"cardBody\">\n              <Card.Title>{artist.title}</Card.Title>\n              <Card.Text>{artist.titleTwo}</Card.Text>\n              <Card.Title>{artist.text}</Card.Title>\n            </Card.Body>\n\n            \n            <Card.Footer>\n              <h5 className=\"text-muted\">{artist.footer}</h5>\n              <CDBBox display=\"flex justify-content-center\">\n                <CDBBtn\n                  href={artist.facebook}\n                  target=\"_blank\"\n                  flat\n                  color=\"dark\" outline\n                  className=\"p-3\"\n                >\n                  <h1>\n                    <FaFacebookF />\n                  </h1>\n                </CDBBtn>\n\n                <CDBBtn\n                  href={artist.insta}\n                  target=\"_blank\"\n                  flat\n                  color=\"dark\" outline\n                  className=\"mx-3 p-3\"\n                >\n                  <h1>\n                    <FaInstagramSquare />\n                  </h1>\n                </CDBBtn>\n\n                <CDBBtn\n                  href={artist.youtube}\n                  target=\"_blank\"\n                  flat\n                  color=\"dark\" outline\n                  className=\"p-3\"\n                >\n                  <h1>\n                    <FaYoutube />\n                  </h1>\n                </CDBBtn>\n\n              </CDBBox>\n            </Card.Footer>\n          </Card>\n        ))}\n      </CardGroup>\n    </>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\n\nexport const DELETE_POST = gql`\nmutation deletePost($id: ID!) {\n  deletePost(_id: $id) {\n    _id\n    email\n    firstName\n    lastName\n    username\n    orders {\n      _id\n      products {\n        _id\n        category {\n          _id\n          name\n        }\n        description\n        image\n        name\n        price\n        quantity\n      }\n      purchaseDate\n    }\n    posts {\n      _id\n    }\n  }\n}\n`;\n\nexport const UPDATE_POST = gql`\n  mutation updatePost($id: ID!, $postBody: String!) {\n    updatePost(_id: $id, postBody: $postBody) {\n      _id\n      postBody\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n    $username: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n      username: $username\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_POST = gql`\nmutation addPost($postBody: String!, $username: String!) {\n  addPost(postBody: $postBody, username: $username) {\n    _id\n    email\n    firstName\n    lastName\n    username\n    orders {\n      _id\n      products {\n        category {\n          _id\n          name\n        }\n      }\n    }\n    posts {\n      _id\n      postBody\n    }\n  }\n}\n`\n","import \"./posts.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { ADD_POST, UPDATE_POST, DELETE_POST } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\n\nconst Posts = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getPosts, { data }] = useLazyQuery(QUERY_POSTS);\n  // const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.posts || [];\n  const [addPost] = useMutation(ADD_POST);\n  const [updatePost, { data: updatedPostData }] = useMutation(UPDATE_POST);\n  const [deletePost, { data: deletedPostData }] = useMutation(DELETE_POST);\n  const [postBody, setPostBody] = useState(\"\");\n  const [username, setUsername] = useState(Auth.getProfile().data.username);\n  const [editing, setEditing] = useState(null);\n  const [updatePostBody, setUpdatePostBody] = useState(\"\");\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      console.log(data);\n      dispatch({\n        type: \"ADD_POST\",\n        posts: data.posts,\n      });\n    }\n    // console.log(data);\n  }, [data]);\n\n  const handleSubmit = async (e) => {\n    console.log( Auth.getProfile().data.username);;\n    e.preventDefault();\n    try {\n      const postObj = {\n        postBody: postBody,\n        username: Auth.getProfile().data.username\n      };\nconsole.log(postObj);\n      const { data } = await addPost({\n        variables: postObj,\n        update: (store, { data: { addPost } }) => {\n          const data = store.readQuery({ query: QUERY_POSTS });\n          store.writeQuery({\n            query: QUERY_POSTS,\n            data: { posts: [...data.posts, addPost] },\n          });\n        },\n      });\n      \n\n      setPostBody(\"\");\n      setUsername(\"\");\n      // doesnt catch error here\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleUpdate = (e, postId, postBody) => {\n    e.preventDefault();\n    setEditing({ postId, postBody });\n    setUpdatePostBody(postBody);\n  };\n\n  const handleUpdateSubmit = (e, postId) => {\n    e.preventDefault();\n    console.log(\"POST ID\" + \" \" + postId);\n    updatePost({\n      variables: { id: postId, postBody: updatePostBody },\n      update: (store, { data: { updatePost } }) => {\n        const data = store.readQuery({ query: QUERY_POSTS });\n        const updatedPost = { ...updatePost, username: data.posts.find(post => post._id === postId).username };\n        store.writeQuery({\n          query: QUERY_POSTS,\n          data: {\n            posts: data.posts.map((post) =>\n              post._id === postId ? updatedPost : post\n            ),\n          },\n        });\n      },\n    });\n    setUpdatePostBody(\"\");\n    setEditing(null);\n  };\n\n  const handleDelete = (e, postId) => {\n    e.preventDefault();\n    console.log(\"POST ID\" + \" \" + postId);\n    deletePost({\n      variables: { id: postId },\n      update: (store, { data: { deletePost } }) => {\n        const data = store.readQuery({ query: QUERY_POSTS });\n        store.writeQuery({\n          query: QUERY_POSTS,\n          data: {\n            posts: data.posts.filter((post) => post._id !== postId),\n          },\n        });\n      },\n    });\n  };\n\n  return (\n    <div className=\"posts\">\n    <div className=\"postContainer\">\n      <h1>Turnip your Thoughts</h1>\n      {posts.map((post) => {\n        const showButtons = Auth.getProfile().data.username === post.username;\n        return (\n          <div className=\"postDiv\" key={post._id}>\n            <div className=\"commentText\">\n              <h5>{post.username}</h5>\n              {editing && editing.postId === post._id ? (\n                <form onSubmit={(e) => handleUpdateSubmit(e, post._id)}>\n                  <input\n                    type=\"text\"\n                    value={updatePostBody}\n                    onChange={(e) => setUpdatePostBody(e.target.value)}\n                  />\n                  <button type=\"submit\">Save</button>\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault();\n                      setEditing(null);\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </form>\n              ) : (\n                post.postBody\n              )}\n            </div>\n            {showButtons && (\n              <>\n                <button onClick={(e) => handleUpdate(e, post._id, post.postBody, post.username)}>\n                  Update\n                </button>\n                <button onClick={(e) => handleDelete(e, post._id)}>\n                  Delete\n                </button>\n              </>\n            )}\n          </div>\n        );\n      })}\n    </div>\n    {Auth.loggedIn() ? (\n      <form className=\"newPost\" onSubmit={handleSubmit}>\n        <input\n          type=\"hidden\"\n          value={Auth.getProfile().username}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Post\"\n          value={postBody}\n          onChange={(e) => setPostBody(e.target.value)}\n        />\n        <button className=\"postSubmitBtn\" type=\"submit\">Post</button>\n      </form>\n    ) : (\n      <p>You need to be logged in to post</p>\n    )}\n  </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport Cart from \"../components/Cart\";\nimport Title from \"../components/Title\";\nimport Band from \"../components/Band\";\n// import Video from \"../components/Video\";\nimport Posts from \"../components/Posts\";\n// import DisplayPosts from \"../components/Posts/DisplayPosts\";\n\n\n\nconst Home = () => {\n  const token = localStorage.getItem(\"id_token\")\n  if (token){\n\n    return (\n      <div>\n        <Title />\n        <Band />\n        {/* <Video /> */}\n        <ProductList />\n        <Posts />\n        {/* <DisplayPosts /> */}\n        <Cart />\n      </div>\n    );\n  } else {\nwindow.location.replace(\"/login\")\n  }\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nconst NoMatch = () => {\n  return (\n    <div className=\"noMatch\">\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport styled from \"styled-components\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  }; \n\n  return (\n    <div className=\"login-page\">\n      <Link className=\"form-link\" to=\"/signup\">← Go to Signup</Link>\n      <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <div>\n        <Link className=\"form-link\" to=\"/login\">\n          ← Go to Login\n        </Link>\n        <div className=\"signup-container\">\n          <h2>Signup</h2>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"firstName\">First Name:</label>\n              <input\n                placeholder=\"First\"\n                name=\"firstName\"\n                type=\"firstName\"\n                id=\"firstName\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"lastName\">Last Name:</label>\n              <input\n                placeholder=\"Last\"\n                name=\"lastName\"\n                type=\"lastName\"\n                id=\"lastName\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                placeholder=\"Username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                placeholder=\"youremail@test.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row space-between my-2\">\n              <label htmlFor=\"pwd\">Password:</label>\n              <input\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"flex-row flex-end\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"nav__links\">\n            <Link to=\"/orderHistory\"><button>Order History</button></Link>\n          </li>\n          <li className=\"nav__links\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/login\" onClick={() => Auth.logout()}><button> Logout</button>\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"nav__links\">\n            <Link to=\"/signup\"><button>Sign-up</button></Link>\n          </li>\n          <li className=\"nav__links\">\n            <Link to=\"/login\"><button>Login</button></Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"header-image\">\n      <h1 className='flex-row'>\n        <div className=\"mx-1\">\n        <Link to=\"/\" className='site-logo'>\n        </Link>\n        </div>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div className=\"success\">\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page.</h2>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <div className=\"history\">\n              <h2>\n                Order History for {user.firstName} {user.lastName} 🎶\n              </h2>\n            </div>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n    return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        posts: {\n          merge(existing = [], incoming= [], { merger } ) {\n            return [\n              ...existing.filter((post) => post._id !== incoming._id),\n              ...incoming,\n            ];\n          },\n        },\n      },\n    },\n  },\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache,\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      \n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\n              <Route path=\"/products/:id\" element={<Detail />} />\n              <Route path=\"*\" element={<NoMatch />} />\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\n              <Route path=\"/products/:id\" element={<Detail />} />\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}